<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="https://github.com/Zzhaoxu/Zzhaoxu.github.io.git/atom.xml" rel="self"/>
  
  <link href="https://github.com/Zzhaoxu/Zzhaoxu.github.io.git/"/>
  <updated>2023-06-16T06:22:30.702Z</updated>
  <id>https://github.com/Zzhaoxu/Zzhaoxu.github.io.git/</id>
  
  <author>
    <name>developer.zx</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="https://github.com/Zzhaoxu/Zzhaoxu.github.io.git/2023/06/16/Vue%E7%9A%84%E4%B8%89%E7%A7%8D%E4%BC%A0%E5%80%BC%E6%96%B9%E5%BC%8F%E4%BB%8B%E7%BB%8D/"/>
    <id>https://github.com/Zzhaoxu/Zzhaoxu.github.io.git/2023/06/16/Vue%E7%9A%84%E4%B8%89%E7%A7%8D%E4%BC%A0%E5%80%BC%E6%96%B9%E5%BC%8F%E4%BB%8B%E7%BB%8D/</id>
    <published>2023-06-16T06:22:30.301Z</published>
    <updated>2023-06-16T06:22:30.702Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Vue组件的三种常用的传值方式在日常工作中是用的非常多的，非常重要！"><a href="#Vue组件的三种常用的传值方式在日常工作中是用的非常多的，非常重要！" class="headerlink" title="Vue组件的三种常用的传值方式在日常工作中是用的非常多的，非常重要！"></a>Vue组件的三种常用的传值方式在日常工作中是用的非常多的，非常重要！</h2><blockquote><p>在进行下面的介绍之前，首先要搞清楚什么是父组件，子组件和兄弟组件，下面是他们的介绍</p></blockquote><ol><li><strong>父组件向子组件传值</strong><br>父组件向子组件共享传递数据需要使用自定义属性，示例代码如下：</li></ol><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">//父组件里面的主要内容</span><span class="token comment" spellcheck="true">//使用子组件，自定义属性名称将父组件的两个数据暴露给子组件，例如//我这使用了msg和user,然后子组件中同样使用msg与user接收数据，</span><span class="token comment" spellcheck="true">//同样注意是通过数据绑定的方式传递</span><span class="token operator">&lt;</span>Child <span class="token punctuation">:</span>msg<span class="token operator">=</span><span class="token string">"message"</span> <span class="token punctuation">:</span>user<span class="token operator">=</span><span class="token string">"suerinfo"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>Child<span class="token operator">></span><span class="token comment" spellcheck="true">//下面这一行是引入子组件,子组件的定义名称为Child，之后记得注册</span><span class="token keyword">import</span> Child <span class="token keyword">from</span> <span class="token string">'./路径名/child.vue'</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span><span class="token punctuation">{</span>        message<span class="token punctuation">:</span><span class="token string">'hello vue.js'</span>        userinfo<span class="token punctuation">:</span><span class="token punctuation">{</span> name<span class="token punctuation">:</span><span class="token string">'hh'</span><span class="token punctuation">,</span>age<span class="token punctuation">:</span><span class="token number">20</span><span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">//子组件里面的内容</span><span class="token operator">&lt;</span>template<span class="token operator">></span>    <span class="token operator">&lt;</span>view<span class="token operator">></span>        <span class="token operator">&lt;</span>p<span class="token operator">></span>父组件传递过来的msg值<span class="token punctuation">:</span><span class="token punctuation">{</span><span class="token punctuation">{</span>msg<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>        <span class="token operator">&lt;</span>p<span class="token operator">></span>父组件传递过来的user值<span class="token punctuation">:</span><span class="token punctuation">{</span><span class="token punctuation">{</span>user<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>view<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span><span class="token comment" spellcheck="true">//通过自定义属性接收父组件传过来的参数,这里的属性名称一定要与父组件保持一致（msg,user）,注意不要更改props里面的属性值，因为里面的属性是只读的，同时修改之后这样也会导致父子组件的值不同。</span>props<span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'msg'</span><span class="token punctuation">,</span><span class="token string">'user'</span><span class="token punctuation">]</span></code></pre><p>最后简单总结就是：父组件绑定自定义属性，传值；子组件在props里面声明。<br> 2.  <strong>子组件向父组件传值</strong><br>子组件向父组件共享传递数据使用自定义事件。示例代码如下：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">//子组件(child.vue)中的内容</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token punctuation">{</span> child_data_<span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    methods<span class="token punctuation">:</span> <span class="token punctuation">{</span>        <span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>child_data<span class="token operator">+</span><span class="token operator">=</span><span class="token number">2</span>            <span class="token comment" spellcheck="true">//第一步</span>            <span class="token comment" spellcheck="true">//子组件修改数据时，通过$emit()触发自定义事件</span>            <span class="token comment" spellcheck="true">//这里填写监听事件与想要传递给父组件的数据</span>            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">'dataChange'</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>child_data<span class="token punctuation">)</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">//父组件中的内容</span><span class="token comment" spellcheck="true">//第二步</span><span class="token comment" spellcheck="true">//其实就等于事件监听，监听子组件中的child_data的数据变化)</span><span class="token operator">&lt;</span>Child @datachange <span class="token operator">=</span> <span class="token string">"change"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>Child<span class="token operator">></span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token punctuation">{</span> fahter_data <span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    methods<span class="token punctuation">:</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//第三步</span>        <span class="token function">change</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//这里的val其实就是子组件传递过来的child_data</span>            <span class="token comment" spellcheck="true">//下面这句代码说白了就是起到一个转存的作用</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>father_data <span class="token operator">=</span> val        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p> 3.<strong>兄弟组件之间的数据传值</strong><br> 在vue2.x的版本中，兄弟组件之间的数据共享使用的是EventBus<br> 基本步骤：</p><ul><li>建立eventBus.js模块，并向外共享一个Vue的实例对象</li><li>在发送方组件中调用EventBus.$emit（‘事件名称’，要发送的数据）来触发自定义事件</li><li>在接收方组件，调用EventBus.$on(‘事件名称’，事件处理函数)<br>来注册一个自定义事件</li></ul><p>下面是示例代码：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">//兄弟组件（数据发送方）</span><span class="token keyword">import</span> eventBus <span class="token keyword">from</span> <span class="token string">'./eventBus.js'</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token punctuation">{</span>            data<span class="token punctuation">:</span><span class="token string">'hello'</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    methods<span class="token punctuation">:</span> <span class="token punctuation">{</span>        <span class="token function">snedData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            eventBus<span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">'share'</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">)</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">//eventBus.js</span><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token comment" spellcheck="true">//向外共享Vue的实例对象</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">new</span> <span class="token class-name">vue</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">//兄弟组件（数据接收方）</span><span class="token keyword">import</span> eventBus <span class="token keyword">from</span> <span class="token string">'./eventBus.js'</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token punctuation">{</span>            receive_data<span class="token punctuation">:</span><span class="token string">' '</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token function">created</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        eventBus<span class="token punctuation">.</span><span class="token function">$on</span><span class="token punctuation">(</span><span class="token string">'share'</span><span class="token punctuation">,</span>val <span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>receive_data <span class="token operator">=</span> val        <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>最后简单总结三种传值关系就是：<br>父向子传数据使用自定义属性<br>子向父传数据使用自定义事件<br>兄弟组件之间传送数据使用EventBus</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Vue组件的三种常用的传值方式在日常工作中是用的非常多的，非常重要！&quot;&gt;&lt;a href=&quot;#Vue组件的三种常用的传值方式在日常工作中是用的非常多的，非常重要！&quot; class=&quot;headerlink&quot; title=&quot;Vue组件的三种常用的传值方式在日常工作中是用的</summary>
      
    
    
    
    
  </entry>
  
</feed>
